# challenge: iterative GET server

üìÖ 2025-09-21
üìÅ building a web server

---

## ‚úÖ what i did  
-clicked start
-opened the terminal
-ran: 'vim bro.s'
-typed: '.intel_syntax noprefix'
        '.global _start'
        '.data'
        'data:  .ascii  "HTTP/1.0 200 OK\r\n\r\n"'
        'data_len= . - data'
        'msg:   .skip  256'
        'content:  .skip  256'
        '.text'
        '_start:'
        'mov rax, 41'
        'mov rdi, 2'
        'mov rsi, 1'
        'mov rdx, 0'
        'syscall          #socket'
        'mov r10, rax'
        'sub rsp, 16'
        'mov r11, 0x2'
        'mov [rsp], r11w'
        'mov r11, 0x5000'
        'mov [rsp+2], r11w'
        'mov r11, 0x00000000'
        'mov [rsp+4], r11d'
        'mov r11, 0'
        'mov [rsp+8], r11d'
        'mov rax, 49'
        'mov rdi, r10'
        'mov rsi, rsp'
        'mov rdx, 16'
        'syscall            #bind'
        'mov rax, 50'
        'mov rdi, r10'
        'mov rsi, 0'
        'syscall            #listen'
        'mov rax, 43'
        'mov rdi, r10'
        'mov rsi, 0'
        'mov rdx, 0'
        'syscall            #accept'
        'mov r12, rax'
        'mov rax, 0'
        'mov rdi, r12'
        'lea rsi, msg'
        'mov rdx, 256'
        'syscall            #read'
        'mov rax, 2'
        'lea rcx, msg'
        'add rcx, 4'
        'mov rbx, 0x0'
        'mov [rcx+16], rbx'
        'mov rdi, rcx'
        'mov rsi, 0'
        'syscall            #open'
        'mov r13, rax'
        'mov rax, 0'
        'mov rdi, r13'
        'lea rsi, content'
        'mov rdx, 256'
        'syscall            #read'
        'mov r14, rax'
        'mov rax, 3'
        'mov rdi, r13'
        'syscall            #close'
        'mov rax, 1'
        'mov rdi, r12'
        'lea rsi, data'
        'mov rdx, data_len'
        'syscall            #write'
        'mov rax, 1'
        'mov rdi, r12'
        'lea rsi, content'
        'mov rdx, r14'
        'syscall            #write'
        'mov rax, 3'
        'mov rdi, r12'
        'syscall            #close'
        'mov rax, 43'
        'mov rdi, r10'
        'mov rsi, 0'
        'mov rdx, 0'
        'syscall            #accept'
        'mov rax, 60'
        'mov rdi, 0'
        'syscall            #exit'
-ran: 'as -o bro.o bro.s'
-ran: 'ld -o bro bro.o'
-ran: '/challenge/run bro'
-flag popped out

## üßëüèæ‚Äçüè´ what this challenge teaches u
to accept multiple request u just need to add an accept syscall at the end before the exit
im not sure this is the right way, i pretty sure im supposed to loop accept, read, open, read, close, write, write..

## üèÅ Flag 
pwn.college{MxeknFtWpi5CDKmqvBHxSqjSSne.QX3QzMzwCO4IDOxEzW}
