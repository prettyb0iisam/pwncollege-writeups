# challenge: level3

📅 2025-08-29
📁 debugging refresher

---

## ✅ what i did  
1st WAY:
-clicked start
-opened the terminal
-ran: '/challenge/embryogdb_level3'
-(gdb): r
-(gbd): c
-(gdb): x/10gx $rsp
-copied one random value
-(gdb): c
-(gdb): pasted the value
-wrong answer but at least now i knew which one im was supposed to copy (the 6th q-word in the stack)
-(gdb): r
-(gdb): c
-(gdb): x/gx $rsp+40
-copied the value
-(gdb): c
-pasted the value
-flag popped out

2nd WAY (canon):
-clicked start
-opened the terminal
-ran: '/challenge/embryogdb_level3'
-(gdb): set disassembly-flavor intel
-(gdb): disas main
the line main+544 is crucial cuz is doing a cmp between two register. if the cmp succeded we get the flag because the program
will call win function. so the goal now is to understand in which of the 2 registers, rax and rdx, the value we added will be stored.
-(gdb): break *main+544
-(gdb): r
-(gdb): c
-(gdb): c
-typed: '1' -> wrong value
-(gdb): info registers
we can see that rdx holds 1, our value, and rax holds the random value we r supposed to give
-(gdb): disas main
in the line main+540 rax, receive a value from the stack. so we need to start the program again and when it says the value has been set, we need to dump the stack
-(gdb): r
-(gdb): c
the random value has been set
-(gdb): x/gx $rbp-0x18
-copied the value
-(gdb): c
-pasted the value
-correct answer
-(gdb): c
-flag popped out

## 🧑🏾‍🏫 what this challenge teaches u
how to dump memory locations in gdb using x/ and specify quantity, unit and format
the formula is: x/[n][u][f] [address]
-n -> number of bytes
-u -> unit size. b=byte h=word w=double-word g=quad-word
-f -> format. d=dec x=hex s=string i=instruction
-address -> address memory to be dumped. it can be a register ($reg) or an absolute address

to switch from AT&T syntax to intel u can do -> set disassembly-flavor intel
disas main is crucial to understand how the program works 
rbp register is crucial for memory allocation when variable r created inside a function

## 🏁 Flag  
pwn.college{Qj3bGmNLcLATUJoHVZvxPHIhSTe.dZDNywCO4IDOxEzW}
